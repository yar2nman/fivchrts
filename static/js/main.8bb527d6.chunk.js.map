{"version":3,"sources":["chartsRoot/barchart.js","chartsRoot/PiChart.js","chartsRoot/ChartWrapper.jsx","chartsRoot/ChartsSection.jsx","chartsRoot/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyResponsiveBar","data","keys","indexby","ytitle","xtitle","showLegends","isHorizontal","myonclick","margin","colors","axisBottomTickRotation","axisBottomlegendOffset","onClick","valueFormat","indexBy","top","right","bottom","left","padding","layout","valueScale","type","indexScale","round","scheme","colorBy","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","format","value","isNaN","Number","toLocaleString","labelSkipWidth","labelSkipHeight","labelTextColor","from","modifiers","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","ariaLabel","barAriaLabel","e","id","formattedValue","indexValue","MyResponsivePie","console","log","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","useStyles","makeStyles","theme","root","height","width","boxShadow","shadows","borderRadius","backgroundColor","position","child","chartName","ChartWrapper","children","name","classes","className","marginTop","spacing","title","Typography","variant","Grid","container","table","minWidth","MyTable","rows","columns","align","caption","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","row","item","getName","str","split","word","charAt","toUpperCase","slice","join","flexGrow","maxWidth","paper","textAlign","color","palette","text","secondary","formControl","marginBottom","selectEmpty","tableContainer","App","useState","setData","solution","setsolution","setsolutionName","setsolutionIncome","project_cost","setproject_cost","table_1_soft_costs","settable_1_soft_costs","table_2_pre_construction","settable_2_pre_construction","table_3_construction","settable_3_construction","consumption_breakdown","setconsumption_breakdown","embodied_carbon_breakdown","setembodied_carbon_breakdown","graph_built_area","setgraph_built_area","table_2","settable_2","useEffect","fetch","headers","then","response","json","myJson","solutions","length","FormControl","InputLabel","Select","defaultValue","labelId","solution_name","onChange","d","find","x","reports","economic_report","income","pc","Object","entries","vlaue","push","cost","ratio","setProjectCost","t1sc","settable1soft_costs","t2pc","settable2pre_construction","t3c","settable3construction","cb","environmental_report","energy_consumtion","total_kWh_year","normalised_kWh_year_m2","setConsumptionBreakdown","ecb","lca_dictionary","setEmbodiedCarbonBreakdown","gba","units_report","area_by_unit","setGraphBuiltArea","t2","number_of_units","ratio_by_num_of_units","ratio_by_nla","ratio_by_total_built_area","settable2","setSolutionData","target","MenuItem","xs","table_1","total_built_area","nla","efficiency","ChartsSection","sm","lg","v","label","normalized","r","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb527d6.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ResponsiveBar } from '@nivo/bar'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = ({ data, keys, indexby, ytitle, xtitle, showLegends, isHorizontal, myonclick, margin, colors, axisBottomTickRotation, axisBottomlegendOffset  /* data prop */ }) => (\n    <ResponsiveBar\n        data={data}\n        onClick={myonclick}\n        valueFormat=\" >-,\"\n        keys={[...keys]}\n        indexBy={indexby}\n        margin={ margin || { top: 50, right: 50, bottom: 50, left: 80 }}\n        padding={0.3}\n        layout={isHorizontal? \"horizontal\": \"vertical\"}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={colors || { scheme: 'blues'}}\n        colorBy=\"indexValue\"\n        axisBottom={ {\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: axisBottomTickRotation || 0,\n            legend: xtitle || indexby,\n            legendPosition: 'middle',\n            legendOffset: axisBottomlegendOffset || 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: ytitle,\n            legendPosition: 'middle',\n            legendOffset: -40,\n            format: value => `${ isNaN(value)? value : Number(value).toLocaleString()}`,\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    1.6\n                ]\n            ]\n        }}\n        legends={!showLegends? []: [\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        role=\"application\"\n        ariaLabel=\"Nivo bar chart demo\"\n        barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}}\n    />\n)\n\nexport default MyResponsiveBar","import React from \"react\";\n\nimport { ResponsivePie } from '@nivo/pie'\n\nconst MyResponsivePie = ({ data, colors /* see data tab */ }) => (\n    <ResponsivePie\n        data={data}\n        onClick={(data) => {\n            console.log(data);\n        }}\n        valueFormat=\" >-,\"\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.7}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        colors={colors || { scheme: 'reds' }}\n        borderColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    0.2\n                ]\n            ]\n        }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color', modifiers: [['darker', 0.8]] }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    2\n                ]\n            ]\n        }}\n     \n    />\n)\n\nexport default MyResponsivePie;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    boxShadow: theme.shadows[2],\n    borderRadius: 5,\n    backgroundColor: \"white\",\n    position: \"relative\",\n    // paddingTop: theme.spacing(3),\n  },\n  child: {\n    height: \"90%\",\n    width: \"100%\",\n    position: \"absolute\",\n    top: 40,\n    left: 0,\n  },\n  chartName: {\n    position: \"absolute\",\n    top: 20,\n    left: 50,\n  },\n}));\n\nconst ChartWrapper = ({ children, name }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        {name && <span className={classes.chartName}>{name}</span>}\n        {/* {children} */} \n        <div className={classes.child}>\n        {children}\n      </div>\n      </div>\n     \n    </>\n  );\n};\n\nexport default ChartWrapper;\n","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    // marginBottom: theme.spacing(6),\n    marginTop: theme.spacing(6),\n  },\n}));\n\nexport default ({ children, title }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        {title && <Typography variant=\"h4\">{title}</Typography>}\n        <br />\n        <Grid container spacing={2}>\n          {children}\n        </Grid>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nexport default function MyTable({rows, columns, align, caption}) {\n  const classes = useStyles();\n\n  columns = columns || [] // List of table headers\n  rows = rows || [[]] // List of List containing table rows each row in a list\n  align = align || 'left' // Alignment of table cells and columns\n    caption = caption || '' // Table caption shown belwo the table to the left\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"caption table\">\n      <caption>{caption || 'Table'}</caption>\n        <TableHead>\n          <TableRow>\n            {columns.map((column) => (\n                <TableCell key={column} align={'left'}>\n                    {column}\n                </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row}>\n                {row.map((item) => (\n                    <TableCell key={item} align={'left'}>\n                        {item}\n                    </TableCell>\n                ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","// import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MyResponsiveBar from './chartsRoot/barchart';\nimport MyResponsivePie from './chartsRoot/PiChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ChartWrapper from './chartsRoot/ChartWrapper';\nimport { FormControl, InputLabel, MenuItem, Select, Paper } from '@material-ui/core';\nimport ChartsSection from './chartsRoot/ChartsSection';\nimport MyTable from './chartsRoot/Table';\n\nconst getName = (str = '') => {\n  return str.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1))\n  .join(' ');\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n    maxWidth: \"100%\",\n    padding: \"74px 35px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 3,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(6),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableContainer: {\n    height: 400,\n    width: \"100%\",\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n\n  const [data, setData] = useState([]);\n  const [solution, setsolution] = useState({});\n  const [solutionName, setsolutionName] = useState({});\n  const [solutionIncome, setsolutionIncome] = useState({});\n\n  const [project_cost, setproject_cost] = useState([]);\n  const [table_1_soft_costs, settable_1_soft_costs] = useState({});\n  const [table_2_pre_construction, settable_2_pre_construction] = useState({});\n  const [table_3_construction, settable_3_construction] = useState({});\n\n  const [consumption_breakdown, setconsumption_breakdown] = useState({});\n  const [embodied_carbon_breakdown, setembodied_carbon_breakdown] = useState([]);\n  const [graph_built_area, setgraph_built_area] = useState([]);\n  const [table_2, settable_2] = useState([]);\n\n  \n\n  \n  \n\n  const setSolutionData = (solution_name) => {\n    let solution = data.find(x => x.solution_name === solution_name)\n    setsolution(solution);\n    setsolutionName(solution.solution_name)\n    setsolutionIncome(solution.reports.economic_report.income)\n\n    setProjectCost();\n    settable1soft_costs();\n    settable2pre_construction();\n    settable3construction();\n\n    setConsumptionBreakdown();\n    setEmbodiedCarbonBreakdown();\n    setGraphBuiltArea();\n    settable2();\n\n    // settable_1_soft_costs(solution.reports.economic_report.table_1_soft_costs)\n    // settable_2_pre_construction(solution.reports.economic_report.table_2_pre_construction)\n    // settable_3_construction(solution.reports.economic_report.table_3_construction)\n    console.log('state solution', solution);\n    console.log('project cost', project_cost);\n\n\n    function setProjectCost() {\n      let pc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.project_cost)) {\n        if (key !== 'total') {\n          pc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        }\n        setproject_cost(pc);\n      }\n    }\n\n    function settable1soft_costs() {\n      let t1sc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_1_soft_costs)) {\n        t1sc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_1_soft_costs(t1sc);\n      }\n    }\n\n    function settable2pre_construction() {\n      let t2pc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_2_pre_construction)) {\n        t2pc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_2_pre_construction(t2pc);\n      }\n    }\n\n    function settable3construction() {\n      let t3c = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_3_construction)) {\n        t3c.push({ 'id': vlaue.name, 'label': vlaue.name, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_3_construction(t3c);\n      }\n    }\n\n    // Energy Consumption Breakdown\n    function setConsumptionBreakdown() {\n      let cb = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.environmental_report.energy_consumtion.consumption_breakdown)) {\n        cb.push({ 'id': getName(key), 'label': getName(key), 'value': vlaue.total_kWh_year, 'normalized': vlaue.normalised_kWh_year_m2 });\n        setconsumption_breakdown(cb);\n      }\n    }\n\n    // Embodied Carbon Breakdown\n    function setEmbodiedCarbonBreakdown() {\n      let ecb = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.environmental_report.lca_dictionary.embodied_carbon_breakdown)) {\n        ecb.push({ 'id': getName(key), 'label': getName(key), 'value': vlaue });\n        setembodied_carbon_breakdown(ecb);\n      }\n      console.log('embodied carbon breakdown', ecb);\n    }\n\n    // Graph Built Area\n    function setGraphBuiltArea() {\n      let gba = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.units_report.graph_built_area)) {\n        gba.push({ 'id': getName(vlaue.name), 'label': getName(vlaue.name), 'value': vlaue.area_by_unit });\n        setgraph_built_area(gba);\n      }\n      console.log('graph built area', gba);\n    }\n\n    // Table 2\n    function settable2() {\n      let t2 = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.units_report.table_2)) {\n        t2.push([vlaue.name, vlaue.number_of_units, vlaue.ratio_by_num_of_units, vlaue.ratio_by_nla, vlaue.ratio_by_total_built_area]);\n        \n       \n      }\n      settable_2(t2);\n      console.log('table 2', t2);\n    }\n    \n  }\n\n  const getData = () => {\n    fetch('data.json'\n      , {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        setData(myJson.solutions);\n      });\n  }\n\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n\n  return (\n    <>\n    {/* <TopBar/> */}\n    <div className={classes.root}>\n        {data && data?.length > 0 &&\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"solutions-select-label\">Select Solution</InputLabel>\n                <Select defaultValue={''}\n                  labelId=\"solutions-select-label\"\n                  id=\"solutions-select\"\n                  value={solution?.solution_name || ''}\n                  onChange={d => setSolutionData(d.target.value)}\n                  \n                >\n                  {data.map((item) =>\n                    <MenuItem value={item.solution_name}\n                     key={item?.solution_name}>{getName(item.solution_name)}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n        }\n\n{data && data?.length > 0 &&\n          <Grid item xs={12} className='Mydiv'>\n            <ChartWrapper name={'Solution Area Chart'} >\n              <MyResponsiveBar className={classes.paper} data={data.map((item) => {\n                let v = {\n                  'name': getName(item.solution_name),\n                  'area': item.reports.units_report.table_1.total_built_area,\n                  'nla': item.reports.units_report.table_1.nla,\n                  'efficiency': item.reports.units_report.table_1.efficiency\n                }\n                return v\n              })} keys={['area']} indexby={'name'} ytitle={'Area'} xtitle={' '} showLegends={false} isHorizontal={false}  />\n              </ChartWrapper>\n          </Grid>\n        }\n      <Grid  container spacing={3}>\n\n\n        {/* Unit Reports  */}\n{graph_built_area && graph_built_area?.length > 0 &&\n        <ChartsSection title={'Unit Reports'}>\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Unit Built Area Chart'} >\n              <MyResponsivePie data={graph_built_area} colors={{scheme: 'reds'}}/>\n            </ChartWrapper>\n\n          </Grid>\n\n          <Grid container spacing={3} item xs={12} sm={6} lg={6}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>Efficiency {solution.reports.units_report.table_1.efficiency} %</Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>NLA {solution.reports.units_report.table_1.nla} m2</Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>Total Built Area {solution.reports.units_report.table_1.total_built_area} m2</Paper>\n            </Grid>\n\n          </Grid>\n\n          <Grid item xs={12} sm={12} lg={12} className='Mydiv'>\n            <MyTable rows={table_2} columns={['name', 'number_of_units', 'ratio_by_num_of_units', 'ratio_by_nla', 'ratio_by_total_built_area']} caption={'Units Table'} />\n          </Grid>\n        </ChartsSection>\n}        \n        { project_cost && project_cost.length > 0 && \n        <ChartsSection title=\"Economic Report\">\n          <Grid item xs={12} sm={6} lg={6}  className='Mydiv'>\n            <ChartWrapper name={'Project Cost'}>\n            <MyResponsivePie data={project_cost} />\n            </ChartWrapper>\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Project Cost %'}>\n            <MyResponsiveBar data={project_cost} keys={['ratio']} indexby={'id'}  ytitle={'cost %'} xtitle={'cost item'} showLegends={false} isHorizontal={false} />\n            </ChartWrapper>\n          </Grid>\n        {table_1_soft_costs && table_1_soft_costs?.length > 0 &&\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Soft Cost'}>\n            <MyResponsiveBar data={table_1_soft_costs} keys={['value']} indexby={'id'} ytitle={''} xtitle={'Soft Costs'} showLegends={false} isHorizontal={true}\n            margin={{top: 50, right: 30, bottom: 50, left: 120 }} />\n            </ChartWrapper>\n          </Grid>\n        }\n        {table_2_pre_construction && table_2_pre_construction?.length > 0 &&\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Pre Construction Cost'}>\n            <MyResponsiveBar data={table_2_pre_construction} keys={['value']} indexby={'id'} ytitle={''} xtitle={'Pre-construction cost'} showLegends={false} isHorizontal={false} />\n            </ChartWrapper>\n          </Grid>\n        }\n        {table_3_construction && table_3_construction?.length > 0 &&\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Construction Cost Chart'}>\n            <MyResponsiveBar data={table_3_construction} keys={['value']} indexby={'id'} ytitle={''} xtitle={'Construction Cost'} showLegends={false} isHorizontal={false} />\n            </ChartWrapper>\n          </Grid>\n        }\n        <br/>\n        </ChartsSection>\n}\n        {/* Economic cost */}\n        {/* Cost breakdown */}\n        {/* Income */}\n        {/* Net Zero Building */}\n        {/* Energy Consumption */}\n\n        {consumption_breakdown && consumption_breakdown?.length > 0 && <ChartsSection title=\"Environmental Report\">\n        <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Energy Consumption Breakdown KWH / Year'}>\n            <MyResponsivePie data={consumption_breakdown} showLegends={false} isHorizontal={false} colors={{scheme: 'greens'}} />\n            </ChartWrapper>\n            </Grid>\n\n            {consumption_breakdown && consumption_breakdown?.length > 0 &&\n          <Grid item xs={12} sm={6} lg={6} className='Mydiv'>\n            <ChartWrapper name={'Energy Consumption Normalized KWH / Year / M2'}>\n            <MyResponsivePie data={consumption_breakdown.map((v) => {\n              return {'id': v.id, 'label': v.label, 'value': v.normalized}\n             })} showLegends={false} isHorizontal={false} colors={{scheme: 'greens'}} />\n            </ChartWrapper>\n            </Grid>\n      }\n\n{embodied_carbon_breakdown && embodied_carbon_breakdown?.length > 0 && \n        <Grid item xs={12} sm={6} className='Mydiv'>\n            <ChartWrapper name={'Embodied Carbon Breakdown'}>\n\n          <MyResponsiveBar data={embodied_carbon_breakdown} keys={['value']} indexby={'id'} ytitle={''} xtitle={' '} \n          colors={{scheme: 'greens'}} showLegends={false} isHorizontal={false} axisBottomTickRotation={-45} \n          margin={{ top: 10, right: 3, bottom: 100, left: 60 }} axisBottomlegendOffset={50}/>\n          </ChartWrapper>\n        </Grid>\n      }\n\n      {embodied_carbon_breakdown && embodied_carbon_breakdown?.length > 0 &&\n        <Grid item xs={12} sm={6} className={classes.tableContainer}>\n          <MyTable columns={['Item', 'Value']} rows={embodied_carbon_breakdown.map(r => [r.id, r.value])} caption={'Embodied Carbon Breakdown Table'} />\n        </Grid>\n      }\n\n\n        </ChartsSection>\n}\n         \n        {/* Life Cycle Carbon */}\n    </Grid>\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}