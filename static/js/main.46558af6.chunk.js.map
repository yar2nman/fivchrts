{"version":3,"sources":["chartsRoot/barchart.js","chartsRoot/ChartWrapper.jsx","chartsRoot/Table.jsx","chartsRoot/PiChart.js","chartsRoot/economicReportTab.jsx","chartsRoot/enviromentReportTab.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyResponsiveBar","data","keys","indexby","ytitle","xtitle","xaxixEnabled","leftaxisdisabled","showLegends","isHorizontal","myonclick","margin","colors","axisBottomTickRotation","axisBottomlegendOffset","colorBy","onClick","valueFormat","indexBy","top","right","bottom","left","padding","layout","valueScale","type","indexScale","round","scheme","enableGridY","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","format","value","isNaN","Number","toLocaleString","labelSkipWidth","labelSkipHeight","labelTextColor","from","modifiers","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","ariaLabel","barAriaLabel","e","id","formattedValue","indexValue","ChartWrapper","children","name","height","Grid","container","spacing","item","xs","useStyles","makeStyles","table","minWidth","MyTable","rows","columns","caption","align","includeTotals","classes","useState","TotalRow","setTotalRow","useEffect","total","forEach","row","length","map","index","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","column","TableCell","key","TableBody","i","MyResponsivePie","console","log","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","TabPanel","props","other","hidden","aria-labelledby","Box","p","a11yProps","theme","root","backgroundColor","palette","background","paper","width","EconomicReportTab","project_cost","table_1_soft_costs","table_2_pre_construction","table_3_construction","table_1_flats_overall_income_dict","solution","useTheme","React","setValue","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","Tab","label","axis","onChangeIndex","dir","sm","lg","r","ratio","reverse","reports","economic_report","income","project_total_income","profit","simple_roi","EnviromentTab","netZeroCarpon","netZeroEnergy","normalised_emissions_CO2_m2_year","energy_consumption_breakwon","embodied_carbon_breakdown","operationalCarbonBreakdown","md","environmental_report","net_zero_building","energy","net_zero","net_zero_percentage","offset_area","carbon","getName","str","take1","word","split","charAt","toUpperCase","slice","join","flexGrow","maxWidth","textAlign","text","secondary","formControl","marginBottom","selectEmpty","marginTop","tableContainer","App","setData","setsolution","setproject_cost","settable_1_soft_costs","settable_2_pre_construction","settable_3_construction","setembodied_carbon_breakdown","graph_built_area","setgraph_built_area","table_2","settable_2","setttable_1_flats_overall_income_dict","settnetZeroEnergy","setnetZeroCarpon","setenergy_consumption_breakwon","setnormalised_emissions_CO2_m2_year","setoperationalCarbonBreakdown","fetch","headers","then","response","json","myJson","localStorage","setItem","JSON","stringify","solutions","setSolutionData","FormControl","InputLabel","Select","defaultValue","labelId","solution_name","d","target","MenuItem","SelectSolution","find","x","pc","Object","entries","vlaue","push","cost","setProjectCost","t1sc","settable1soft_costs","t2pc","settable2pre_construction","t3c","settable3construction","ecb","lca_dictionary","setEmbodiedCarbonBreakdown","gba","units_report","area_by_unit","setGraphBuiltArea","t2","number_of_units","ratio_by_num_of_units","ratio_by_nla","ratio_by_total_built_area","settable2","t1","settable_1_flatsoverallincomedict","ne","operational_emissions_breakdown","setnormalisedemissionsCO2_m2_year","nzenergy","title","total_KWH_year","energy_consumption","total_kWh_year","normalised_kWh_year_m2","energy_production","nzcarpon","total_tons_co2_year","carbon_savings","normalised_kgco2_m2_year","overall_emissions","energy_consumtion","consumption_breakdown","heating_consumption","cooling_consumption","lighting_consumption","breakdown","embodied_carbon_kgco2_life","operational_carbon_kgco2_life","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","heading","AccordionDetails","table_1","efficiency","nla","total_built_area","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.46558af6.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ResponsiveBar } from '@nivo/bar'\n\nconst MyResponsiveBar = ({ data, keys, indexby, ytitle, xtitle, xaxixEnabled, leftaxisdisabled,\n     showLegends, isHorizontal, myonclick, margin, colors, axisBottomTickRotation, axisBottomlegendOffset, colorBy  /* data prop */ }) => (\n    <ResponsiveBar\n        data={data}\n        onClick={myonclick}\n        valueFormat=\" >-,\"\n        keys={[...keys]}\n        indexBy={indexby}\n        margin={ margin || { top: 50, right: 50, bottom: 50, left: 80 }}\n        padding={0.3}\n        layout={isHorizontal? \"horizontal\": \"vertical\"}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={colors || { scheme: 'blues'}}\n        colorBy= {colorBy || \"indexValue\"}\n        enableGridY={false}\n        axisBottom={xaxixEnabled ? {\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: axisBottomTickRotation || 0,\n            legend: xtitle || indexby,\n            legendPosition: 'middle',\n            legendOffset: axisBottomlegendOffset || 32\n        } : null}\n        axisLeft={!leftaxisdisabled?{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: ytitle,\n            legendPosition: 'middle',\n            legendOffset: -40,\n            format: value => `${ isNaN(value)? value : Number(value).toLocaleString()}`,\n        }: null}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    1.6\n                ]\n            ]\n        }}\n        legends={!showLegends? []: [\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        role=\"application\"\n        ariaLabel=\"Nivo bar chart demo\"\n        barAriaLabel={function(e){return e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}}\n    />\n)\n\nexport default MyResponsiveBar","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n\nconst ChartWrapper = ({ children, name, height }) => {\n  height = height || 200\n  return (\n    <>\n      <Grid container spacing={0}>\n        <Grid item xs={12}><b>{name}</b></Grid>\n        <Grid item xs={12} style={{ height: height + 'px', }}>\n          {children}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ChartWrapper;\n","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\n\n\nexport default function MyTable({rows, columns, align, caption, includeTotals}) {\n  const classes = useStyles();\n\n  columns = columns || [] // List of table headers\n  rows = rows || [[]] // List of List containing table rows each row in a list\n  align = 'center' // Alignment of table cells and columns\n  caption = caption || '' // Table caption shown belwo the table to the left\n  const [TotalRow, setTotalRow] = useState([]);\n  \n \n  useEffect(() => {\n    let total = []\n\n    rows.forEach(row => {\n      if (total.length === 0) {\n        total = row\n      } else {\n        total = total.map((value, index) => {\n          if (isNaN(value)) {\n            return 'Total'\n          }else {\n          return value + row[index]\n          }\n        })\n      }\n      setTotalRow(total)\n    })\n  }, [rows])\n\n\n\n \n  return (\n    <Grid container spacing={1} >\n\n      <Grid item xs={12}>\n        <b>{caption}</b>\n      </Grid>\n      <Grid item xs={12}>\n      <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"caption table\">\n        <TableHead>\n          <TableRow>{columns.map((column) => (<TableCell key={column} align={'center'}><b>{column}</b></TableCell>\n            ))}\n            </TableRow>\n            </TableHead>\n            <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row}>\n                {row.map((item) => (\n                    <TableCell key={item} align={'center'}>{isNaN(item)? item: item.toLocaleString()}</TableCell>\n                ))}\n            </TableRow>\n          ))}\n          {\n          includeTotals?\n            (<TableRow>\n            {TotalRow.map((item, i) => (\n                <TableCell key={i} align={'center'} className='totalCell'>{item.toLocaleString()}</TableCell>\n            ))}\n          </TableRow>): null\n        }\n        </TableBody>\n      </Table>\n    </TableContainer>\n      </Grid>\n    \n    </Grid>\n  );\n}","import React from \"react\";\n\nimport { ResponsivePie } from '@nivo/pie'\n\nconst MyResponsivePie = ({ data, colors /* see data tab */ }) => (\n    <ResponsivePie\n        data={data}\n        onClick={(data) => {\n            console.log(data);\n        }}\n        valueFormat=\" >-,\"\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.7}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        colors={colors || { scheme: 'reds' }}\n        borderColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    0.2\n                ]\n            ]\n        }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color', modifiers: [['darker', 0.8]] }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    2\n                ]\n            ]\n        }}\n     \n    />\n)\n\nexport default MyResponsivePie;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nimport MyTable from './Table';\nimport Grid from '@material-ui/core/Grid';\nimport ChartWrapper from './ChartWrapper';\nimport MyResponsivePie from './PiChart';\nimport MyResponsiveBar from './barchart';\n\n\n\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 100 + '%',\n  },\n}));\n\nexport default function EconomicReportTab({project_cost, table_1_soft_costs, \n            table_2_pre_construction, table_3_construction,\n            table_1_flats_overall_income_dict, solution}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Project Cost\" {...a11yProps(0)} />\n          <Tab label=\"Cost Breakdown\" {...a11yProps(1)} />\n          <Tab label=\"Income\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n\n\n\n        <Grid container spacing={1}>\n                  <Grid item xs={12} sm={6} lg={6}>\n                  <MyTable rows={project_cost.map(r => [r.id, r.value])} \n                      columns={['Item', 'Cost']} \n                      includeTotals={true} \n                      />\n\n                  </Grid>\n                  {project_cost && project_cost.length > 0 &&\n                    <Grid item xs={12} sm={6} lg={6} >\n                      <ChartWrapper name={'Project Cost %'} height={300}>\n                        <MyResponsivePie data={project_cost.map(r => {\n                         return {id: r.id, value: r.ratio}\n                          })}  />\n                      </ChartWrapper>\n                    </Grid>\n                  }\n                </Grid>\n\n\n\n\n\n\n\n\n\n\n\n        </TabPanel>\n\n        <TabPanel value={value} index={1} dir={theme.direction}>\n\n\n\n\n        <Grid container spacing={1}>\n                  {\n                  table_1_soft_costs &&\n                    <Grid item xs={12} sm={4} lg={4}>\n                    <MyTable reverse={true} columns={['Item', 'Cost']}\n                      rows={table_1_soft_costs.map((r) => [r.id, r.value]).reverse()}\n                      includeTotals={true}\n                      caption={'Soft Costs'}\n                    />\n                  </Grid>\n                  }\n\n\n\n                  <Grid item xs={12} sm={4} lg={4}>\n                    <MyTable reverse={true} columns={['Item', 'Cost']}\n                      rows={table_2_pre_construction.map(r => [r.id, r.value]).reverse()}\n                      includeTotals={true}\n                      caption={'Pre-Construction'}\n                    />\n                  </Grid>\n\n\n                  <Grid item xs={12} sm={4} lg={4}>\n                    <MyTable reverse={true} columns={['Unit', 'Cost']}\n                      rows={table_3_construction.map(r => [r.id, r.value]).reverse()}\n                      includeTotals={true}\n                      caption={'Construction'}\n                    />\n                  </Grid>\n\n                </Grid>\n\n\n                <Grid container spacing={1} >\n                  <Grid item xs={12} sm={4} lg={4}>\n                    {table_1_soft_costs && table_1_soft_costs?.length > 0 &&\n                      <ChartWrapper name={'Soft Costs (%)'} height={300}>\n                        <MyResponsiveBar data={table_1_soft_costs} keys={['ratio']} indexby={'id'}\n                          ytitle={''} xtitle={'Soft Costs'}\n                          showLegends={false} isHorizontal={true}\n                          margin={{ top: 3, right: 3, bottom: 3, left: 120 }}\n                        />\n                      </ChartWrapper>\n                    }\n                  </Grid>\n                  <Grid item xs={12} sm={4} lg={4}>\n                    {table_2_pre_construction && table_2_pre_construction?.length > 0 &&\n                      <ChartWrapper name={'Pre-Construction (%)'} height={300}>\n                        <MyResponsiveBar data={table_2_pre_construction} keys={['ratio']} indexby={'id'}\n                          ytitle={''} xtitle={'Pre-Construction (%)'}\n                          showLegends={false} isHorizontal={true}\n                          margin={{ top: 3, right: 3, bottom: 3, left: 120 }}\n                        />\n                      </ChartWrapper>\n                    }\n                  </Grid>\n                  <Grid item xs={12} sm={4} lg={4}>\n                    {table_3_construction && table_3_construction?.length > 0 &&\n                      <ChartWrapper name={'Construction (%)'}>\n                        <MyResponsiveBar data={table_3_construction} keys={['ratio']} indexby={'id'}\n                          ytitle={''} xtitle={'Construction (%)'} height={300}\n                          showLegends={false} isHorizontal={true}\n                          margin={{ top: 3, right: 3, bottom: 3, left: 120 }}\n                        />\n                      </ChartWrapper>\n                    }\n                  </Grid>\n                </Grid>\n\n\n\n\n\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n\n\n\n\n        <Grid container spacing={2} >\n                <Grid item xs={12} sm={6} lg={6}>\n                    <MyTable columns={['Unit', 'Income']}\n                      rows={table_1_flats_overall_income_dict}\n                      caption={'Income Analysis'}\n                      includeTotals={true}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} lg={6}>\n                  <p><b>Project total income</b>      {solution.reports.economic_report.income.project_total_income.toLocaleString()}</p>\n                  <p><b>Profit</b>      {solution.reports.economic_report.income.profit.toLocaleString()}</p>\n                  <p><b>Simple ROI</b>      {solution.reports.economic_report.income.simple_roi.toLocaleString()}</p>\n                </Grid>\n              </Grid>\n\n\n\n\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport MyResponsiveBar from './barchart';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport ChartWrapper from './ChartWrapper';\n\nimport MyTable from './Table';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 130 + '%',\n  },\n}));\n\nexport default function EnviromentTab({netZeroCarpon, solution, netZeroEnergy, normalised_emissions_CO2_m2_year,\n   energy_consumption_breakwon, embodied_carbon_breakdown, operationalCarbonBreakdown}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Net Zero Building\" {...a11yProps(0)} />\n          <Tab label=\"Energy Consumption\" {...a11yProps(1)} />\n          <Tab label=\"Life Cycle Carbon\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n\n\n\n\n\n        <Grid item xs={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} md={6} lg={6}>\n                    {netZeroEnergy && netZeroEnergy?.length > 0 &&\n                    <>\n                      <ChartWrapper height={200} name={'Energy'}>\n                      <MyResponsiveBar data={netZeroEnergy} \n                                        keys={['total_KWH_year']} \n                                        indexby={'title'} \n                                        isHorizontal={true}\n                                        colors={{'scheme': 'greens'}}\n                                        margin={{ top: 3, right: 3, bottom: 3, left: 120 }} />\n                    </ChartWrapper>\n                    <div>{`Yout building is ${solution.reports.environmental_report.net_zero_building.energy.net_zero.net_zero_percentage}% Net Zero Energy building. `}</div>\n                    <div>{`You will need another ${solution.reports.environmental_report.net_zero_building.energy.net_zero.offset_area.toLocaleString()} m² of PV to offset its remaining energy consumption.\n`}</div>\n                    </>\n                    }\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6}>\n                  {netZeroCarpon && netZeroCarpon?.length > 0 &&\n                  <>\n                      <ChartWrapper height={200} name={'Carbon'}>\n                      <MyResponsiveBar data={netZeroCarpon} \n                                        keys={['total_tons_co2_year']} \n                                        indexby={'title'} \n                                        isHorizontal={true}\n                                        colors={{'scheme': 'greens'}}\n                                        margin={{ top: 3, right: 3, bottom: 3, left: 120 }} />\n                    </ChartWrapper>\n                    <div>{`Your building is ${solution.reports.environmental_report.net_zero_building.carbon.net_zero.net_zero_percentage}% Net Zero Carbon building. \n`}</div>\n                    <div>{`You will need another ${solution.reports.environmental_report.net_zero_building.carbon.net_zero.offset_area.toLocaleString()} m² of PV to offset its remaining energy consumption.`}\n</div>\n                    </>\n                    }\n\n                  </Grid>\n                </Grid>\n              </Grid>\n\n\n\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n\n\n        <Grid item xs={12}>\n              {energy_consumption_breakwon && energy_consumption_breakwon.length > 0 &&\n                    <MyTable columns={[' ', 'Heating', 'Cooling', 'Lighting', 'Total']}\n                    rows={energy_consumption_breakwon}/>\n              \n}\n              </Grid>\n\n        </TabPanel>\n\n        <TabPanel value={value} index={2} dir={theme.direction}>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <ChartWrapper height={300} name={'Operational Carbon Breakdown (kgCO2e/m²/year'}>\n                  <MyResponsiveBar data={operationalCarbonBreakdown} \n                                    keys={['embodied', 'operational']} \n                                    indexby={'id'} \n                                    showLegends={true}\n                                    isHorizontal={true}\n                                    colors={{'scheme': 'greens'}}\n                                    margin={{ top: 10, right: 120, bottom: 100, left: 160 }}\n                                    colorBy='id'\n                                    />\n                </ChartWrapper>\n            </Grid>\n            <Grid item xs={12} md={6} lg={6}>\n              {\n              normalised_emissions_CO2_m2_year && normalised_emissions_CO2_m2_year.length > 0 &&\n\n              <ChartWrapper height={300} name={'Operational Carbon Breakdown (kgCO2e/m²/year)'}>\n                <MyResponsiveBar data={normalised_emissions_CO2_m2_year}\n                                  keys={['value']} indexby={'id'} ytitle={' '} xtitle={' '}\n                                  colors={{'scheme': 'greens'}} \n                                  showLegends={false} \n                                  isHorizontal={false} \n                                  axisBottomTickRotation={-45} \n                                  leftaxisdisabled={true}\n                                  xaxixEnabled={true} \n                                  margin={{ top: 10, right: 3, bottom: 100, left: 60 }} \n                                  axisBottomlegendOffset={50} />\n\n              </ChartWrapper>\n\n              }\n            </Grid>\n\n\n\n            <Grid item xs={12} md={6} lg={6}>\n              {embodied_carbon_breakdown && embodied_carbon_breakdown?.length > 0 && \n            <ChartWrapper height={300} name={'Embodied Carbon Breakdown (kgCO2e/m²)'}>\n\n          <MyResponsiveBar data={embodied_carbon_breakdown} keys={['value']} indexby={'id'} ytitle={''} xtitle={' '} \n          colors={{'scheme': 'greens'}} showLegends={false} isHorizontal={false} axisBottomTickRotation={-45} leftaxisdisabled={true}\n          xaxixEnabled={true} \n          margin={{ top: 10, right: 3, bottom: 100, left: 60 }} axisBottomlegendOffset={50}/>\n          </ChartWrapper>\n      }\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MyResponsiveBar from './chartsRoot/barchart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ChartWrapper from './chartsRoot/ChartWrapper';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport MyTable from './chartsRoot/Table';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EconomicReportTab from './chartsRoot/economicReportTab';\nimport EnviromentTab from './chartsRoot/enviromentReportTab';\n\n\nconst getName = (str = '', take1 = false) => {\n  if (take1) {\n    let word = str.split('_')[0];\n\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  } else {\n    return str.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n    maxWidth: \"100%\",\n    padding: \"74px 35px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 3,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(6),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableContainer: {\n    height: 400,\n    width: \"100%\",\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n\n  const [data, setData] = useState([]);\n  const [solution, setsolution] = useState({});\n  const [project_cost, setproject_cost] = useState([]);\n  const [table_1_soft_costs, settable_1_soft_costs] = useState({});\n  const [table_2_pre_construction, settable_2_pre_construction] = useState({});\n  const [table_3_construction, settable_3_construction] = useState({});\n  const [embodied_carbon_breakdown, setembodied_carbon_breakdown] = useState([]);\n  const [graph_built_area, setgraph_built_area] = useState([]);\n  const [table_2, settable_2] = useState([]);\n  const [table_1_flats_overall_income_dict, setttable_1_flats_overall_income_dict] = useState([]);\n  const [netZeroEnergy, settnetZeroEnergy] = useState([]);\n  const [netZeroCarpon, setnetZeroCarpon] = useState([]);\n  const [energy_consumption_breakwon, setenergy_consumption_breakwon] = useState([]);\n  const [normalised_emissions_CO2_m2_year, setnormalised_emissions_CO2_m2_year] = useState([]);\n  const [operationalCarbonBreakdown, setoperationalCarbonBreakdown] = useState([]);\n\n  const setSolutionData = (solution_name) => {\n    let solution = data.find(x => x.solution_name === solution_name)\n    setsolution(solution);\n    setProjectCost();\n    settable1soft_costs();\n    settable2pre_construction();\n    settable3construction();\n    setEmbodiedCarbonBreakdown();\n    setGraphBuiltArea();\n    settable2();\n    settable_1_flatsoverallincomedict()\n    setnormalisedemissionsCO2_m2_year()\n\n    let nzenergy = [{\n      title: 'Energy Consumption',\n      total_KWH_year: solution.reports.environmental_report.net_zero_building.energy.energy_consumption.total_kWh_year,\n      normalised_kWh_year_m2: solution.reports.environmental_report.net_zero_building.energy.energy_consumption.normalised_kWh_year_m2\n    },\n    {\n      title: 'Energy Production',\n      total_KWH_year: solution.reports.environmental_report.net_zero_building.energy.energy_production.total_kWh_year,\n      normalised_kWh_year_m2: solution.reports.environmental_report.net_zero_building.energy.energy_production.normalised_kWh_year_m2\n    }]\n    settnetZeroEnergy(nzenergy)\n\n\n    let nzcarpon = [{\n      title: 'Savings',\n      total_tons_co2_year: solution.reports.environmental_report.net_zero_building.carbon.carbon_savings.total_tons_co2_year,\n      normalised_kgco2_m2_year: solution.reports.environmental_report.net_zero_building.carbon.carbon_savings.normalised_kgco2_m2_year\n    },\n    {\n      title: 'Emissions',\n      total_tons_co2_year: solution.reports.environmental_report.net_zero_building.carbon.overall_emissions.total_tons_co2_year,\n      normalised_kgco2_m2_year: solution.reports.environmental_report.net_zero_building.carbon.overall_emissions.normalised_kgco2_m2_year\n    }]\n    setnetZeroCarpon(nzcarpon)\n\n    let ecb = []\n    ecb.push([\n      'kWh/year',\n      solution.reports.environmental_report.energy_consumtion.consumption_breakdown.heating_consumption.total_kWh_year.toLocaleString(),\n      solution.reports.environmental_report.energy_consumtion.consumption_breakdown.cooling_consumption.total_kWh_year.toLocaleString(),\n      solution.reports.environmental_report.energy_consumtion.consumption_breakdown.lighting_consumption.total_kWh_year.toLocaleString(),\n      (\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.heating_consumption.total_kWh_year +\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.cooling_consumption.total_kWh_year +\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.lighting_consumption.total_kWh_year\n\n\n      ).toLocaleString()\n    ])\n    ecb.push(\n      ['kWh/year/m²',\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.heating_consumption.normalised_kWh_year_m2.toLocaleString(),\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.cooling_consumption.normalised_kWh_year_m2.toLocaleString(),\n        solution.reports.environmental_report.energy_consumtion.consumption_breakdown.lighting_consumption.normalised_kWh_year_m2.toLocaleString(),\n        (\n          solution.reports.environmental_report.energy_consumtion.consumption_breakdown.heating_consumption.normalised_kWh_year_m2 +\n          solution.reports.environmental_report.energy_consumtion.consumption_breakdown.cooling_consumption.normalised_kWh_year_m2 +\n          solution.reports.environmental_report.energy_consumtion.consumption_breakdown.lighting_consumption.normalised_kWh_year_m2\n\n        ).toLocaleString()\n      ])\n\n\n    setenergy_consumption_breakwon(ecb)\n\n\n\n\n    function setProjectCost() {\n      let pc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.project_cost)) {\n        if (key !== 'total') {\n          pc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        }\n        setproject_cost(pc);\n      }\n    }\n\n    function settable1soft_costs() {\n      let t1sc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_1_soft_costs)) {\n        t1sc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_1_soft_costs(t1sc);\n      }\n    }\n\n    function settable2pre_construction() {\n      let t2pc = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_2_pre_construction)) {\n        t2pc.push({ 'id': getName(key), 'label': key, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_2_pre_construction(t2pc);\n      }\n    }\n\n    function settable3construction() {\n      let t3c = [];\n      // eslint-disable-next-line\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.table_3_construction)) {\n        t3c.push({ 'id': vlaue.name, 'label': vlaue.name, 'value': vlaue.cost, 'ratio': vlaue.ratio });\n        settable_3_construction(t3c);\n      }\n    }\n\n\n    // Embodied Carbon Breakdown\n    function setEmbodiedCarbonBreakdown() {\n      let ecb = [];\n      for (const [key, vlaue] of Object.entries(solution.reports.environmental_report.lca_dictionary.embodied_carbon_breakdown)) {\n        ecb.push({ 'id': getName(key), 'label': getName(key), 'value': vlaue });\n        setembodied_carbon_breakdown(ecb);\n      }\n    }\n\n    // Graph Built Area\n    function setGraphBuiltArea() {\n      let gba = [];\n      // eslint-disable-next-line\n      for (const [key, vlaue] of Object.entries(solution.reports.units_report.graph_built_area)) {\n        gba.push({ 'id': getName(vlaue.name), 'label': getName(vlaue.name), 'value': vlaue.area_by_unit });\n        setgraph_built_area(gba.reverse());\n      }\n    }\n\n    // Table 2\n    function settable2() {\n      let t2 = [];\n      // eslint-disable-next-line\n      for (const [key, vlaue] of Object.entries(solution.reports.units_report.table_2)) {\n        t2.push([vlaue.name, vlaue.number_of_units, vlaue.ratio_by_num_of_units, vlaue.ratio_by_nla, vlaue.ratio_by_total_built_area]);\n\n\n      }\n      settable_2(t2);\n    }\n\n    // table_1_flats_overall_income_dict\n    function settable_1_flatsoverallincomedict() {\n      let t1 = []\n      // eslint-disable-next-line\n      for (const [key, vlaue] of Object.entries(solution.reports.economic_report.income.table_1_flats_overall_income_dict)) {\n        t1.push([vlaue.name, vlaue.income]);\n      }\n      setttable_1_flats_overall_income_dict(t1)\n    }\n\n    // solution.reports.environmental_report.lca_dictionary.operational_emissions_breakdown.normalised_emissions_CO2_m2_year\n    function setnormalisedemissionsCO2_m2_year() {\n      let ne = []\n      // eslint-disable-next-line\n      for (const [key, vlaue] of Object.entries(solution.reports.environmental_report.lca_dictionary.operational_emissions_breakdown.normalised_emissions_CO2_m2_year)) {\n        ne.push({ 'id': getName(key, true), 'value': vlaue });\n      }\n      setnormalised_emissions_CO2_m2_year(ne)\n    }\n\n    setoperationalCarbonBreakdown([{'id': 'Carbon Breakdown',\n      'embodied': solution.reports.environmental_report.lca_dictionary.breakdown.embodied_carbon_kgco2_life,\n     'operational': solution.reports.environmental_report.lca_dictionary.breakdown.operational_carbon_kgco2_life}])\n\n  }\n\n  const getData = () => {\n    fetch('data.json'\n      , {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        localStorage.setItem('data', JSON.stringify(myJson))\n        setData(myJson.solutions);\n      });\n  }\n\n\n  useEffect(() => {\n    getData()\n\n  }, [])\n\n\n  return (\n    <>\n      <div className={classes.root}>\n\n        {/* <SelectSolution /> */}\n        {data && data?.length > 0 &&\n          SelectSolution(data, classes, solution, setSolutionData)\n        }\n\n\n        {/* -------------------------------------------------Accordion Area------------------------------------------------- */}\n        {graph_built_area && graph_built_area?.length > 0 &&\n\n          //  --------------------------------unit report--------------------------------\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}><b>Units Report</b></Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} lg={6}>\n                  <ChartWrapper name={'Built Area (m²)'} >\n                    <MyResponsiveBar data={graph_built_area} keys={['value']} indexby={'id'}\n                      xtitle={' '} xaxixEnabled={false} isHorizontal={true} colors={{ scheme: 'reds' }}\n                      margin={{ top: 0, right: 10, bottom: 0, left: 80 }} />\n                  </ChartWrapper>\n                </Grid>\n\n                <Grid item xs={12} sm={6} lg={6} >\n                  <Grid container spacing={0}>\n                    <Grid item xs={12} >\n                      <Grid container spacing={1} >\n                        <Grid item xs={12}>Efficiency {solution.reports.units_report.table_1.efficiency.toLocaleString()} %</Grid>\n                        <Grid item xs={12}>NLA {solution.reports.units_report.table_1.nla.toLocaleString()} m²</Grid>\n                        <Grid item xs={12}>Total Built Area {solution.reports.units_report.table_1.total_built_area.toLocaleString()} m²</Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} >\n                      <MyTable rows={table_2} columns={[' ', 'Number of units', '% of total units', '% of NLA', '% of built area']} includeTotals={true} />\n                    </Grid>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n            </AccordionDetails>\n          </Accordion>\n        }\n\n\n        {/* --------------------------------Economic Report-------------------------------- */}\n        {table_1_soft_costs && table_1_soft_costs?.length > 0 &&\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography className={classes.heading}><b>Economic Report</b></Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Grid container spacing={1} >\n                <Grid item xs={12}>\n                  {project_cost && project_cost.length > 0 &&\n                    <EconomicReportTab project_cost={project_cost}\n                      table_1_soft_costs={table_1_soft_costs}\n                      table_2_pre_construction={table_2_pre_construction}\n                      table_3_construction={table_3_construction}\n                      solution={solution}\n                      table_1_flats_overall_income_dict={table_1_flats_overall_income_dict}\n                    />\n\n                  }  </Grid>\n              </Grid>\n\n            </AccordionDetails>\n          </Accordion>\n        }\n\n        {/* --------------------------Environmental Report-------------------------- */}\n        {netZeroEnergy && netZeroEnergy?.length > 0 &&\n          <Accordion >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}><b>Environmental Report</b></Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <EnviromentTab\n                netZeroCarpon={netZeroCarpon}\n                netZeroEnergy={netZeroEnergy}\n                solution={solution}\n                energy_consumption_breakwon={energy_consumption_breakwon}\n                embodied_carbon_breakdown={embodied_carbon_breakdown}\n                normalised_emissions_CO2_m2_year={normalised_emissions_CO2_m2_year}\n                operationalCarbonBreakdown={operationalCarbonBreakdown}\n\n\n              />\n            </AccordionDetails>\n          </Accordion>\n\n        }\n        {/* -------------------------------------------------Accordion Area------------------------------------------------- */}\n      </div>\n    </>\n  );\n}\n\n\nfunction SelectSolution(data, classes, solution, setSolutionData) {\n  return (\n    <>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"solutions-select-label\">Select Solution</InputLabel>\n        <Select defaultValue={''}\n          labelId=\"solutions-select-label\"\n          id=\"solutions-select\"\n          value={solution?.solution_name || ''}\n          onChange={d => setSolutionData(d.target.value)}\n\n        >\n          {data.map((item) =>\n            <MenuItem value={item.solution_name}\n              key={item?.solution_name}>{getName(item.solution_name)}</MenuItem>\n          )}\n        </Select>\n      </FormControl>\n    </>\n  )\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}